--
1. Remove PSU sensor
2. Modified PSU configuration
--
diff --git a/src/PSUSensorMain.cpp b/src/PSUSensorMain.cpp
index 99f6701..d3b0c1e 100644
--- a/src/PSUSensorMain.cpp
+++ b/src/PSUSensorMain.cpp
@@ -368,10 +368,10 @@ void createSensors(boost::asio::io_service& io,

                 labelHead = label.substr(0, label.find(" "));
             }
-
+#if 0   //remove PSU Pwm sensor
             checkPWMSensor(sensorPath, labelHead, *interfacePath, objectServer,
                            psuNames[0]);
-
+#endif
             if (!findLabels.empty())
             {
                 /* Check if this labelHead is enabled in config file */
@@ -410,7 +410,8 @@ void createSensors(boost::asio::io_service& io,

             std::vector<thresholds::Threshold> sensorThresholds;

-            if (!parseThresholdsFromConfig(*sensorData, sensorThresholds))
+            //if (!parseThresholdsFromConfig(*sensorData, sensorThresholds))
+            if (!parseThresholdsFromConfig(*sensorData, sensorThresholds, &labelHead))
             {
                 std::cerr << "error populating thresholds for "
                           << sensorNameSubStr << "\n";
@@ -449,26 +450,26 @@ void propertyInitialize(void)
                    {"in", "voltage/"},
                    {"fan", "fan_tach/"}};

-    labelMatch = {{"pin", PSUProperty("Input Power", 3000, 0, 6)},
-                  {"pout1", PSUProperty("Output Power", 3000, 0, 6)},
+    labelMatch = {{"pin", PSUProperty("Power In", 3000, 0, 6)},
+                  {"pout1", PSUProperty("Power Out", 3000, 0, 6)},
                   {"pout2", PSUProperty("Output Power", 3000, 0, 6)},
                   {"pout3", PSUProperty("Output Power", 3000, 0, 6)},
                   {"power1", PSUProperty("Output Power", 3000, 0, 6)},
-                  {"vin", PSUProperty("Input Voltage", 300, 0, 3)},
-                  {"vout1", PSUProperty("Output Voltage", 255, 0, 3)},
+                  {"vin", PSUProperty("Voltage In", 300, 0, 3)},
+                  {"vout1", PSUProperty("Voltage Out", 255, 0, 3)},
                   {"vout2", PSUProperty("Output Voltage", 255, 0, 3)},
                   {"vout3", PSUProperty("Output Voltage", 255, 0, 3)},
                   {"in1", PSUProperty("Output Voltage", 255, 0, 3)},
-                  {"iin", PSUProperty("Input Current", 20, 0, 3)},
-                  {"iout1", PSUProperty("Output Current", 255, 0, 3)},
+                  {"iin", PSUProperty("Current In", 20, 0, 3)},
+                  {"iout1", PSUProperty("Current Out", 255, 0, 3)},
                   {"iout2", PSUProperty("Output Current", 255, 0, 3)},
                   {"iout3", PSUProperty("Output Current", 255, 0, 3)},
                   {"curr1", PSUProperty("Output Current", 255, 0, 3)},
-                  {"temp1", PSUProperty("Temperature", 127, -128, 3)},
+                  {"temp1", PSUProperty("TEMP", 127, -128, 3)},
                   {"temp2", PSUProperty("Temperature", 127, -128, 3)},
                   {"temp3", PSUProperty("Temperature", 127, -128, 3)},
-                  {"fan1", PSUProperty("Fan Speed 1", 30000, 0, 0)},
-                  {"fan2", PSUProperty("Fan Speed 2", 30000, 0, 0)}};
+                  {"fan1", PSUProperty("Fan", 25500, 0, 0)},
+                  {"fan2", PSUProperty("Fan Speed 2", 25500, 0, 0)}};

     pwmTable = {{"fan1", "Fan_1"}, {"fan2", "Fan_2"}};

